@model IEnumerable<HamburgersBlog.Models.Map>
@{
    ViewData["Title"] = "Princesses locations";

}
<script src="http://maps.google.com/maps/api/js?key=AIzaSyBPpzwyZvSZDl_oyTd9ejacDgSnyZkAGKA" type="text/javascript"></script>
<style>
    #map_canvas img {
        max-width: none;
    }
</style>
<!-- css popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 100px;
        width: 200px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 1000px; margin-top: 0px"></div>
<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">
        <script type="text/javascript">

    //<!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {

        // Set the margin bottom of the blue wrap
        $('#blue').css("margin-bottom", "0px");

            Initialize();
        });

    // Create the Google map
    function Initialize() {

        // Set Spain as the center of the map
        var Spain = new google.maps.LatLng(41.390205, 2.154007);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 2,
            center: Spain,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // Create the geocoder object
        var geocoder = new google.maps.Geocoder();

        // Get the maps data from the controller, in JSON format
        var mapsData = @Html.Raw(Json.Encode(Model));

        // Using the JQuery "each" selector to iterate through the Maps list from the controller and drop marker pins
            $.each(mapsData, function (i, item) {

                // Using Google geocoding service to get the location of the map by the address
                geocoder.geocode({ 'address': item.Address }, function (results, status) {
                    console.log(results, status);

                    // Set marker in the map location on the map
                    var marker = new google.maps.Marker({
                        'position': results[0].geometry.location,
                        'map': map,
                        'title': item.Name
                    });

                    // Make the marker-pin blue
                    marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                    // Finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked
                    google.maps.event.addListener(marker, 'click', function () {
                        $.ajax('http://api.openweathermap.org/data/2.5/weather?appid=a6b5c2a2cf4790daad5dacb1c0994af6&units=metric&lat=' + marker.position.lat() + '&lon=' + marker.position.lng())
                            .done(function (res) {
                                // Put in some information about each Map by its JSON object - Map's name and address
                                var infowindow = new google.maps.InfoWindow({
                                    content: "<div class='infoDiv'><h3><u><center>" + item.Name + "</h3></u></center>" + "<h4><center>" + item.Address + "</h4></center><h5><center><b>Temperature: </b>" + res.main.temp +"C°</center></h5></div></div>"
                                });
                                infowindow.open(map, marker);
                            })
                    });
            });
        })
    }
        </script>
    </section>
}