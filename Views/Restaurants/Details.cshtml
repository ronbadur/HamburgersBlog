@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/lightslider-js")

@model HamburgersBlog.Models.Restaurant

@{
    ViewBag.Title = "Details";
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#light-slider").lightSlider({
            item: 1,
            autoWidth: false,
            slideMove: 1, // slidemove will be 1 if loop is true
            slideMargin: 10,

            addClass: '',
            mode: "slide",
            useCSS: true,
            cssEasing: 'ease', //'cubic-bezier(0.25, 0, 0.25, 1)',//
            easing: 'linear', //'for jquery animation',////

            speed: 400, //ms'
            auto: false,
            pauseOnHover: false,
            loop: false,
            slideEndAnimation: true,
            pause: 2000,

            keyPress: false,
            controls: true,
            prevHtml: '',
            nextHtml: '',

            rtl: false,
            adaptiveHeight: false,

            vertical: false,
            verticalHeight: 500,
            vThumbWidth: 100,

            thumbItem: 10,
            pager: true,
            gallery: false,
            galleryMargin: 5,
            thumbMargin: 5,
            currentPagerPosition: 'middle',

            enableTouch: true,
            enableDrag: true,
            freeMove: true,
            swipeThreshold: 40,

            responsive: [],

            onBeforeStart: function (el) { },
            onSliderLoad: function (el) { },
            onBeforeSlide: function (el) { },
            onAfterSlide: function (el) { },
            onBeforeNextSlide: function (el) { },
            onBeforePrevSlide: function (el) { }
        });

        const size = 500;
        var c = document.getElementById("myCanvas");
        var ctx = c.getContext("2d");
        ctx.textAlign = 'center'; 
        ctx.font = "30px Arial";
        ctx.strokeText("Hamburgers", 150, 40);
    });
</script>

<div>
    <h2>@Html.DisplayFor(model => model.Name) Details</h2>
    <hr />
    <dl class="dl-horizontal"> </dl>
    <div class="restaurant-container">
        <div class="img-container">
            <img class="restaurant-img" src="/Media/images/@(Model.Name.ToLower()).jpg" alt="Alternate Text" />
        </div>
        <div class="details-container">
            <p>Name: @Html.DisplayFor(model => model.Name)</p>
            <p>Location: @Html.DisplayFor(model => model.Location)</p>
            <p>Rate: @Html.DisplayFor(model => model.Rate) Stars</p>
            <div class="compatible">
                @if (@Model.IsVeganFriendly)
                {
                    <img title="Vegan Friendly" class="compatible-image" src="~/Media/images/vegeterian.png" />
                }
                @if (@Model.IsKosher)
                {
                    <img title="Is Kosher" class="compatible-image" src="~/Media/images/kosher.png" />
                }
                @if (@Model.IsParkingAvailable)
                {
                    <img title="Close Parking Avilable" class="compatible-image" src="~/Media/images/parking.png" />
                }
            </div>
        </div>
    </div>
</div>

<canvas id="myCanvas" class="hamburgers-canvas-details" width="300" height="50"></canvas>

<ul id="light-slider" style="width: 20%">
    @foreach (var item in Model.Hamburgers)
    {
        <li class="burger-view">
            <div class="burger-name">@item.Name</div>
            <img class="burger-image" src='/Media/images/@(item.Name.ToLower() + ".jpg")' />
            <p class="burger-description">@item.Description</p>
        </li>
    }
    ...

</ul>

<div class="reviews-container">
    <h2>Reviews</h2>
    <hr />
    @foreach (var item in Model.Reviews)
    {
        <div>
            <p class="review-title">@item.Title</p>
            <p class="review-content">@item.Content</p>
            <p class="review-author-name">@item.AuthorName</p>
            @{ if (Request.IsAuthenticated)
                {
                    <div>
                        @Html.ActionLink("Edit", "../Reviews/Edit", new { id = item.ReviewID }) |
                        @Html.ActionLink("Delete", "../Reviews/Delete", new { id = item.ReviewID })
                    </div>
                }
            }
        </div>
    }
</div>
<div class="buttons-container">
    <a class="btn btn-lg add-review" href="@Url.Action("../Reviews/Create", "Add", new { RestaurantId = Model.RestaurantID })" role="button">Add Review</a>
    <a class="btn btn-lg add-review" href="@Url.Action("Index")">Back</a>
</div>

